Index: Java/AFootball.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Java;\r\nimport java.util.Scanner;\r\n\r\npublic class AFootball {\r\n    public static void main(String[] args) {\r\n        Scanner n = new Scanner(System.in);\r\n        String t = n.next();\r\n        \r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Java/AFootball.java b/Java/AFootball.java
--- a/Java/AFootball.java	(revision 7487c0c28567ae920ec6852fb925b00e0668392f)
+++ b/Java/AFootball.java	(date 1731147278907)
@@ -8,3 +8,4 @@
         
     }
 }
+
Index: Java/Rudolf_and_the_ugly_String.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Rudolf_and_the_ugly_String {\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Java/Rudolf_and_the_ugly_String.java b/Java/Rudolf_and_the_ugly_String.java
--- a/Java/Rudolf_and_the_ugly_String.java	(revision 7487c0c28567ae920ec6852fb925b00e0668392f)
+++ b/Java/Rudolf_and_the_ugly_String.java	(date 1731147278908)
@@ -1,3 +1,35 @@
-public class Rudolf_and_the_ugly_String {
+import java.util.Scanner;
+
+public class Rudolf_and_the_ugly_string {
+    public static void main(String[] args) {
+        Scanner scanner = new Scanner(System.in);
 
+        // Reading number of test cases
+        int test_cases = Integer.parseInt(scanner.nextLine());
+
+        for (int t = 0; t < test_cases; t++) {
+            // Reading integer input
+            int n = Integer.parseInt(scanner.nextLine());
+
+            // Reading string input
+            String s = scanner.nextLine();
+            int i = 0;
+            int count = 0;
+
+            while (i <= s.length() - 3) {
+                // Check for "pie" or "map"
+                if (s.substring(i, i + 3).equals("pie") || s.substring(i, i + 3).equals("map")) {
+                    // Modify the string
+                    s = s.substring(0, i + 1) + s.substring(i + 2);
+                    count++;
+                } else {
+                    i++;
+                }
+            }
+            // Print the result for each test case
+            System.out.println(count);
+        }
+
+        scanner.close();
+    }
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 7487c0c28567ae920ec6852fb925b00e0668392f)
+++ b/.idea/misc.xml	(date 1731147278907)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="23" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
